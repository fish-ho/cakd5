!python -V

# 표현식
print(273)
10+20+30

# 표현식이 하나 이상씩 모이면 문장
print("Hello Python")
print(52, 'Hello Python', 5+3)

# 문장이 모여서 프로그램
a = 1; b = 1 ;c = a+b
print(c)

# Python Keyword
import keyword
print(keyword.kwlist,'\n')
print(len(keyword.kwlist))

식별자 기본 규칙
- 키워드를 사용하면 안된다.
- 특수문자는 언더바 만 사용한다.
- 숫자로 시작하면 안된다.
- 공백을 포함할 수 없다.

alpha
break # 키워드
alpha10
_alpha
273alpha #숫자시작
Alpha
ALPHA
has alpha #공백 포함

https://bibi6666667.tistory.com/277
파이썬은 snake_case와 CamelCase를 모두 사용

- itemlist item_list ItemList
- loginstatus login_status LoginStatus
- 캐멀 케이스(대문자로 시작) 클래스
- 스네이크 케이스(소문자로 시작) 뒤에 ()가 있다. - 함수
- 스네이크 케이스(소문자로 시작) 뒤에 ()가 없다. - 변수


# 사람이 생각하는 방식을 그대로 표현할 수 있는 언어

if 3 in [1,2,3,4]: print("3이 있습니다.")

if 5 in [1,2,3,4,5]: 
    print('exist')
else: print('no exist')
    

if "eo" in ["kang", "seo", "eo"]:
    print('o')

# 파이썬 자료형 - 숫자형(정수, 실수, 8진수, 16진수)
a=123
b=-123
c=0
d=1.23
e=0o177 # 8진수 0o로 시작
f=0xABC # 16진수 0x로 시작
g=0b101010 # 2진수 0b로 시작
print(a)
print(b)
print(c)
print(d)
print(e)
print(f)
print(g)

# 사칙연산
a=10
b=2
c=a+b
d=a*b
e=a/b
f=a%b # 나머지
g=a//b # 몫
h=2**3 # 제곱
print(a)
print(b)
print(c)
print(d)
print(e)
print(f)
print(g)
print(h)

# 다른 타입간 연산은 안됨
string = "문자열"
number = 273
string + number

a=10
a="문자"
a=100.0
type(a)

# 복합 대입 연산자
num = 10
num += 10
num *= 10
num

num=100
num-=50
num//=5
num

# 사용자 입력
input('인사말을 입력하세요: ')

num = input('숫자를 입력하세요: ') #input함수는 문자열로 출력함
print(num)
type(num)

num1 = input('숫자를 입력하세요')
num2 = input('숫자를 입력하세요')
print(num1+num2)

num1 = input('숫자를 입력하세요')
num1_n = int(num1)
num2 = input('숫자를 입력하세요')
num2_n = int(num2)
print(num1_n+num2_n)

a=input('a입력')
a1=int(a)
b=input('b입력')
b1=float(b)
print(a1+b1)

a=52
b=52.273
print(str(a) + str(b))

# 문자열 : "", '', """ """, ''' '''
p1="python's value is great"
print(p1)

s1='"python is valuable" he says'
print(s1)

s2= 'python\'s value is great'
print(s2)

y1="Once you study data analysis\nYou need Python"
print(y1)
y2= '''Once you study data analysis
You need Python'''
print(y2)
y3= """Once you study data analysus
You need Python"""
print(y3)

t1='He says "I\'m hungry"\nand I say "me, too"'
print(t1)

# 문자열 연산
a1='Python'
a2=' is easy to learn'
print(a1+a2)
print((a1+' ') * 3)
print("="*20)


# 자료형 - List
# 리스트는 []로 표시하며 []안의 요소를 콤마로 구분하여 순서있게 나열
list1=[1,2,3,4,5]
a1=5;a2=7
list2=['a','b','c','d']
list3=[1,'a','abc',list1,list2, a1, a2]
print(list3)

# 인덱싱
list1=[1,2,3,4,5]
print(list1[:])
print(list3[2])
print(list3[3][4])
print(list3[4][1])

#리스트 수정, 삭제
a=[0,1,2,3,4,5,6,7,8,9]
b=['a','b','c']
a[0]=1
b[1]='a'
print(a)
print(b)
del b[1]
print(b)

a=[0,1,2,3,4,5,6,7,8,9]
b=['a','b','c']
c= a+b
print(c)
print(c[-1]) #맨 끝 인덱스
c[-1]=1
print(c[-1])

# 정렬 x.sort()
b=[2,4,3,1]
b.sort()
print(b)
# 내림차순
b_d=sorted(b,reverse=True)
print(b_d)
b.reverse()
print(b)

s=[1,1,2,3,4,5,6,7,8,9,1]
#s.sort(); print(s)
#s.reverse(); print(s)
s=sorted(s,reverse=True); print(s)

# 인덱스 위치 반환 x.index()
c=[1,2,3,1,5]
print(c.index(3))

import numpy as np
c=np.random.randint(100,size=100).tolist()
print(c)
c.index(65)

# 개수 반환 x.count()
c=[1,1,3,3,3,5,5]
print(c.count(3))

# 리스트 확장
h=[1,2,3]
h.extend([4,5])
print(h)
# 추가
h.append(6)
print(h)
h.insert(0,5)
print(h)
h.insert(7,7)
print(h)


# 튜플
tuple1=(1,2,3,4,5)
a1=5;a2=7
tuple2=('a','c','d')
tuple3=(1,'a','abc',tuple1,tuple2, a1, a2)

print(tuple1[:])
print(tuple3[2])
print(tuple3[3][4])
print(tuple3[4][1])

# 자료형 - Tuple
# 튜플의 요소 값은 변경할 수 없음 - 프로그램에서 그 값이 항상 변하지 않아야되는 경우 사용

t1=(1,) #1개의 요소만 가질 때는 요소뒤에 콤마를 붙여야 함
print(t1)
t2=1,2,3
print(t2)
print(t2*3)
t3=t1+t2
print(t3)
t4=(1) #,안붙이면 int로 취급
print(t4)
type(t4)

# 자료형 - 사전(키와 값을 하나의 요소로 하는 순서가 없는 집합) key:value 형태
# 리스트와 튜플은 인덱스로 값에 접근
d1={'a':1, 'b':2,'c':3}
print(d1['a'])
d1['b']=5
print(d1)

print(d1.keys())
print(d1.values())
print(d1.items())

d={'철수':'사과','영수':'바나나','국수':'배'}
print(d.keys())
print(d.values())
print(d.items())

d['철수']= '파인애플'
print(d)


# 사전 검색

d={'철수':'사과','영수':'바나나','국수':'배'}

a=input('이름을 입력하세요 :')
a_in=str(a)
if a in d:
    print(f'{a}가 좋아하는 과일은 {d[a]} 입니다.')
else: 
    print('no exist name.')


# 자료형 - 집합, set(중복을 하용하지 않으며 순서가 없다.) ()안의 []리스트 형태
s1=set([7,8,2,4,3])
s2=set("Hello")
print(s1); print(s2)

# 집합은 인덱싱으로 값을 얻을 수 없으며 필요시 리스트나 튜플로 변환 후 인덱싱
l1=list(s1)
print(l1[1])
l2=list(s2)
print(l2[1])

s1=set([1,2,3,4,5,6])
s2=set([4,5,6,8,9])

print('union :',list(s1|s2))
print('intersection :',list(s1&s2))

list=[1,2,3,4,5]
tuple=(1,2,3,4,5)
dic={'a':1,'b':2,'c':3}
set=([1,2,'a','c',5])

print(list)
print(tuple)
print(dic)
print(set)


# 들여쓰기
li=['a','b','c']
if 'a' in li:
    print('a가 li에 있습니다.')
else:
    print('a가 li에 없습니다.')

# 문자열 포멧
name='홍길동'
age=30
print('나의 이름은',name,'입니다. 나이는',age,'입니다.')
f'나의 이름은 {name}입니다. 나이는 {age}입니다.'

d={'name':'홍길동', 'age':30}
print('나의 이름은',d["name"],'입니다. 나이는',d["age"],'입니다.')
print(f'나의 이름은 {d["name"]}입니다. 나이는 {d["age"]}입니다.')

y=3.4213234
f'{y:0.4f}' # 소수점 4자리까지만 표현

f'{y:10.4f}' # 소수점 4자리까지 표현, 총 자리수를 10으로 맞춤

# 포멧함수
f1="{} 선수가 {}등입니다." .format('홍길동',1)
print(f1)
f1="{1} 선수가 {0}등입니다." .format(1,'홍길동') # {}안의 숫자는 인자의 순서
print(f1)
print("%s 선수가 %d등입니다." %("홍길동",1))

f="{}은 {}보다 {}배 쉽습니다." .format('파이썬','자바',2)
print(f)
print("%s은 %s보다 %d배 쉽습니다." %('파이썬','자바',2))

12345
     12345
12.345679
          12.346

# 과제

a=12.345679
a1=int(a*1000)
print(f'{a1}')
print(f'{a1:10}')
print(f'{a}')
print(f'{a:17.3f}')

# 제어문 - if-elif~else
# "수입과 지출금액을 비교해서 수입이 많으면 저축 증가, 반대이면 빚이 증가 
# 같으면 현상 유지"
i=5,000,000
e=3,000,000

if i>e:
    print('저축 증가')
elif i<e:
    print('빚이 증가')
else:
    print('현상 유지')

# for 반복문
numbers=[5,15,6,20,7,25]
for num in numbers:
    print(num,end=' ')

# for ~ continue ~ break
# 1~10 범위의 정수에서 1부터 5까지만 출력하세요.
i=0
for i in range(1,11):
    print(i,end=' ')
    if i<5:
        continue
    else:
        break

# numbers 리스트에서 15,20,25를 출력하세요. (for,if 필수)
numbers=[5,15,6,20,7,25]
num=0
for num in numbers:
    if num>= 15:
        print(num,end=' ')


# while
# 정수 1부터 n까지 더할 때 그 합이 1000보다 커지게 되는 n과 합을 구하시오.

x=1; sum=0
while 1:
    sum=sum+x
    if sum>1000:
        print(x)
        print(sum)
        break
    x=x+1

# while문을 사용해 1부터 1000까지의 정수 중 3의 배수의 합을 구하시오.
a=0; sum=0
while a<1000:
    a+=1
    if a%3==0:
        sum=sum+a
print(sum)

        
        
    

#[과제] 1부터 100까지의 정수중 5에서 95까지의 합을 구하세요.
i=0; sum=0
while i<101:
    i+=1
    if i>4 and i<96:
        sum=sum+i
print(sum)
        
    

# 5를 2로 나누었을때의 몫과 나머지를 구하시오.
x=5; y=2
a=x//y; b=x%y
print(f'몫은 {a}, 나머지는 {b}입니다. ')

# 101의 3승을 구하시오.
print(101**3)

a='Python'
b='3.8.3'
print(a+' '+b)

a=5
a='10'
a=15
print(type(a))

a=5
a**=3
a%=3
print(a)

a=input('이름을 입력하시오: ')
print(f'이름은 {a} 입니다.')

a=input("첫 번째 숫자를 입력하시오: ")
a_1=int(a)
b=input("두 번째 숫자를 입력하시오: ")
b_1=int(b)
c=input("세 번째 숫자를 입력하시오: ")
c_1=int(c)
print((a_1**b_1)/c_1)

# [과제] while문을 사용해 1부터 1000까지의 정수 중 3괴 5의 공배수의 합을 구하시오.
i=1; sum=0;
while i<=1000:
    i+=1
    if i%3==0 or i%5==0:
        sum+=i
print(sum)

# [과제] 1부터 5까지 입력해서 12345를 출력하세요
a=input('숫자를 입력하시오: ')
b=input('숫자를 입력하시오: ')
c=input('숫자를 입력하시오: ')
d=input('숫자를 입력하시오: ')
e=input('숫자를 입력하시오: ')
print(a+b+c+d+e)
    

# [과제] [0,1,2,3,4,5,6,7,8,9,'a','b','c']에서 9와 'a'를 삭제 후 리스트로 출력하세요.
a=[0,1,2,3,4,5,6,7,8,9,'a','b','c']
del a[9]; del a[-3]
print(a)

# [과제] [0,1,2,3,4,5,6,7,9,'b','c']에서 'c'를 삭제 후 출력하세요.
a=[0,1,2,3,4,5,6,7,9,'b','c']
del a[-1]
for i in a:
    print(i,end=' ')

# [과제] [4,8,5,4,8,4,3,9,1,9]를 내림차순으로 정렬하세요.
a=[4,8,5,4,8,4,3,9,1,9]
#a.sort()
#a.reverse()
#print(a)
a=sorted(a,reverse=True); print(a)

# [과제] format 함수를 이용해서 다음과 같은 형식으로 현재 날짜/시간을 출력하세요.
# 2021년 12월 29일 15시 47분 30초
import datetime
today=datetime.datetime.today()
year=today.year
mon=today.month
day=today.day
hour=today.hour
min=today.minute
sec=today.second
print(f'{year}년 {mon}월 {day}일 {hour}시 {min}분 {sec}초')

# [과제] 현재 시각을 오전과 오후로 구분하는 프로그램을 작성하세요.
import datetime
t=datetime.datetime.now()
hour=t.hour
min=t.minute
if hour>12:
    print(f'현재시각은 오후 {int(hour)-12}시 {min}분 입니다.')
else:
    print(f'현재시각은 오전 {hour}시 {min}분 입니다.')


# [과제] 정수를 입력하면 홀수 짝수를 판별하는 프로그램 작성
num=input('숫자를 입력하세요: ')
if int(num)%2==0:
    print(f'입력한 숫자 {num}은 짝수 입니다.')
else:
    print(f'입력한 숫자 {num}은 홀수 입니다.')

# [과제] 태어난 연도를 입력받아 띠를 출력하는 프로그램을 작성하세요.
# 원숭이, 닭, 개, 돼지, 쥐, 소 ,범 ,토끼, 용, 뱀, 말, 양
y=int(input('태어난 연도를 입력해주세요: '))
if y%12==0:
    print(f'{y}년은 원숭이띠 입니다.')
elif y%12==1:
    print(f'{y}년은 닭띠 입니다.')
elif y%12==2:
    print(f'{y}년은 개띠 입니다.')
elif y%12==3:
    print(f'{y}년은 돼지띠 입니다.')
elif y%12==4:
    print(f'{y}년은 쥐띠 입니다.')
elif y%12==5:
    print(f'{y}년은 소띠 입니다.')
elif y%12==6:
    print(f'{y}년은 범띠 입니다.')
elif y%12==7:
    print(f'{y}년은 토끼띠 입니다.')
elif y%12==8:
    print(f'{y}년은 용띠 입니다.')
elif y%12==9:
    print(f'{y}년은 뱀띠 입니다.')
elif y%12==10:
    print(f'{y}년은 말띠 입니다.')
else:
    print(f'{y}년은 양띠 입니다.')

[과제] 계절 구분 프로그램
- 각 계절별 출력 멘트는 계절에 맞게 창작
- if 조건문으로 datetime 모듈을 import해서 datetime.now 함수를 사용해서 작성

#1~3봄4~6여7~9가10~12겨
import datetime
t=datetime.datetime.now()
mon=t.month
if mon>=1 and mon<=3:
    print('현재는 봄 입니다.')
elif mon>=4 and mon<=6:
    print('현재는 여름 입니다.')
elif mon>=7 and mon<=9:
    print('현재는 가을 입니다.')
else:
    print('현재는 겨울 입니다.')

[과제] 커피 자판기 프로그램
- 시나리오 : 자판기 커피 재고 5잔, 커피 1잔 가격 300원, 재고 범위내에서 300원 이상 돈을 넣으면 거스름돈과 커피를 주고 그렇지 않으면 반환하며 재고가 소진되면 안내멘트 출력
- 각 case별 멘트 출력은 상황에 맞게 창작

- while, if ~ elif ~ 
else 제어문을 사용하여 작성

insert=0; cost=300; stock=5;
if stock>0:
    buy=input('구매를 원하는 수량을 입력하세요: ')
    if int(buy)>stock:
        print(f'재고가 부족합니다. 남은 수량: {stock}')
    elif int(buy)<stock:
        print(f'구매 수량은 {buy}잔, 금액은 {int(buy)*300}원 입니다.')
        in_cost=input('금액을 투입하여 주세요. 투입한 금액: ')
        if int(in_cost)==int(buy)*300:
            print('커피 나왔습니다. 감사합니다.')
        elif int(in_cost)<int(buy)*300:
            print(f'금액이 부족합니다. 투입된 금액 :{in_cost}원, 부족한 금액 :{int(buy)*300-int(in_cost)}')
            print('투입한 금액을 반환합니다.')
        else: 
            print(f'투입한 금액은 {in_cost}원, 거스름돈은 {int(in_cost)-int(buy)*300}원 입니다.')
            print('커피와 거스름돈을 챙겨주세요. 감사합니다.')
#else stock==0:
   # print('재고가 부족합니다.')
        
 

insert=0; cost=300; stock=5;
while 1:
    if stock>0:
        buy=input('구매를 원하는 수량을 입력하세요: ')
        if int(buy)>stock:
            print(f'재고가 부족합니다. 남은 수량: {stock}')
            
        elif int(buy)<=stock:
            print(f'구매 수량은 {buy}잔, 금액은 {int(buy)*300}원 입니다.')
            in_cost=input('금액을 투입하여 주세요. 투입한 금액: ')
            if int(in_cost)==int(buy)*300:
                print('커피 나왔습니다. 감사합니다.')
                stock=stock-int(buy)
                if stock==0:
                    print("재고가 모두 소진되었습니다. 판매를 중지합니다.")
                    break
            elif int(in_cost)<int(buy)*300:
                print(f'금액이 부족합니다. 투입된 금액 :{in_cost}원, 부족한 금액 :{int(buy)*300-int(in_cost)}')
                print('투입한 금액을 반환합니다.')
                continue
            else: 
                print(f'투입한 금액은 {in_cost}원, 거스름돈은 {int(in_cost)-int(buy)*300}원 입니다.')
                print('커피와 거스름돈을 챙겨주세요. 감사합니다.')
                stock=stock-int(buy)
 


        
        



# [과제] 람다 함수를 이용해서 a의 b제곱을 구하는 식을 만들고
# a, b가 아래와 같이 주어졌을 때 각각의 값을 구하세요. 
# a = 2, b = 5
# a= 5, b = 2
L=lambda x,y:x**y
a=2; b=5
print(L(a,b))
a=5; b=2
print(L(a,b))
